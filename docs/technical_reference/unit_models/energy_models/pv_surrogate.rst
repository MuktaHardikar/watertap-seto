Photovoltaic (PV) Surrogate Model
====================================================

This Photovoltaic (PV) unit model is a surrogate model that inherits its base model structure from the `Solar Energy Base Model <https://watertap.readthedocs.io/en/latest/technical_reference/unit_models/energy_models/solar_energy_base.html>`_.
The model is trained using the data generated by the Parabolic Trough Physical Model from `PySAM <https://nrel-pysam.readthedocs.io/en/main/>`_ which is is a Python package for the National Renewable Energy Laboratory's `System Advisor Model (SAM) <https://sam.nrel.gov>`_.
The unit model supports steady state only.

Degrees of Freedom
------------------

The PV surrogate model degrees of freedom depends on the number of input labels defined by the user during data generation. The model includes at least 1 degree of freedom
for the system capacity. By default, the model includes the following input labels:

.. csv-table::
   :header: "Variable", "Variable Name","Symbol", "Units", "Description"

   "System Capacity", "`system_capacity`", ":math:`S_{capacity}`", ":math:`\text{kW}`", "Thermal power output of the system"
   "Hours of Storage", "`hours_storage`", ":math:`H_{storage}`", ":math:`\text{h}`", "Number of hours of thermal storage"
   "Loop temperature", "`temperature_loop`", ":math:`T_{loop}`", ":math:`\text{°C}`", "Loop outlet temperature in Celsius"

Users can choose to use a fixed value for the hours of storage or loop temperature when generating data using PySAM.

Generating Data
---------------

The data for the surrogate model can be generated using the `generate_trough_data` function in `run_pysam_trough.py` in the REFLO package.
The default ``trough_weather_data.csv`` file and the ``trough_physical_iph-reflo.json`` config file are included in the REFLO package.
Weather  specific to the user's location can be downloaded from the `National Solar Radiation Database <https://nsrdb.nrel.gov/data-viewer>`_ and configuration ``.json`` files can be created using SAM.

The `generate_trough_data` function takes the following arguments:

.. csv-table::
   :header: "Variable", "Variable Name", "Units", "Description"

   "Design Size", "``design_sizes``", ":math:`\text{kW}`", "List of range of values of interest for the trough system capacity"
   "Hours of storage", "``hours_storage``", ":math:`\text{h}`", "List of range of values of interest for the hours of thermal storage"
   "Loop temperature", "``temperature_loop``", ":math:`\text{°C}`", "List of range of values of interest for the loop outlet temperature"
   "Weather file", "``weather_file``", "", "Path to the weather file"
   "Configuration file", "``config_file``", "", "Path to the configuration file for the trough"
   "Dataset file name", "``dataset_filename``", "", "Name of the output dataset file"

Users can update the weather file for their specific location of interest by updating the file to variable ``weather_file_default``.
The trough default parameters can be adjusted in the ``config_file_default`` as needed.
The `generate_trough_data` function will generate the necessary data files (.pkl or .csv) for the surrogate model. 

Variables
---------

The default outputs labels for the data generated using PySAM and the CST surrogate model are:

.. csv-table::
   :header:  "Variable", "Variable Name", "Symbol", "Unit", "Description"

   "Heat Annual","``heat_annual``", ":math:`H_{annual}`", ":math:`\text{kWh}`", "Annual heat production of the system"
   "Electricity Annual", "``electricity_annual``", ":math:`E_{annual}`", ":math:`\text{kWh}`", "Annual electricity demand of the system"
   "Freeze Protection", "``freeze_protection``", ":math:`T_{freeze}`", ":math:`\text{°C}`", "Minimum temperature that the heat transfer fluid is allowed to reach"
   "Capacity Factor", "``capacity_factor``", ":math:`CF`", "", "Ratio of the system's annual heat output to the heat output if it operated at system capacity over the year"
   "Solar Multiplier", "``solar_multiplier``", ":math:`SM`", "", "The multiplier that represents the solar field aperture area as a multiple of the aperture required to meet system capacity"
   "Total Aperture Area", "``total_aperture_area``", ":math:`A_{total}`", ":math:`\text{acre}`", "Total area of the solar collector"
   "Number of Loops", "``number_of_loops``", ":math:`N_{loops}`", "", "Number of parallel loops in the system"

Relevant output labels are used to cost the CST system.

Model Structure
---------------

Additional parameters included in the CST surrogate model are defined as follows:

.. csv-table::
   :header: "Parameter", "Parameter Name", "Symbol", "Valid Range", "Units"

   "Row Spacing", "``row_spacing``", ":math:`S_{row}`", "15", ":math:`\text{m}`"
   "Maximum solar collector assembly width", "``maximum_sca_width``", ":math:`W_{sca,max}`", "8.2", ":math:`\text{m}`"


The parameters are used to calculate the land area required for the CST system.

.. math::

    A_{land} = \frac{A_{aperture} \times S_{row}}{W_{sca,max}}

Costing
--------

The PV surrogate unit model can be costed using either the ``simple`` or ``detailed`` costing models.



References
----------
* Blair, N.; Dobos, A.; Freeman, J.; Neises, T.; Wagner, M.; Ferguson, T.; Gilman, P.; Janzou, S. (2014). System Advisor Model™, SAM™ 2014.1.14: General Description. NREL/TP-6A20-61019. National Renewable Energy Laboratory. Golden, CO. Accessed May 23, 2025. www.nrel.gov/docs/fy14osti/61019.pdf . 
* System Advisor Model™ Version 2025.4.16 (SAM™ 2025.4.16). National Renewable Energy Laboratory. Golden, CO. Accessed May 23, 2025. https://https://sam.nrel.gov .