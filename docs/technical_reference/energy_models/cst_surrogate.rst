.. _cst_surrogate_ref:

Concentrating Solar Parabolic Trough (Surrogate)
================================================

This Concentrating Solar Parabolic Trough (CST) unit model is a surrogate model that inherits its
structure from the :ref:`Solar Energy Base Class <solar_energy_base_ref>`. The model is trained using the 
data generated by the Parabolic Trough Physical Model from `PySAM <https://nrel-pysam.readthedocs.io/en/main/>`_ 
which is is a Python package for the National Renewable Energy Laboratory's `System Advisor Model (SAM) <https://sam.nrel.gov>`_.

Model Structure
---------------

Outputs from the surrogate model are used to estimate the performance and the cost of the CST system.
The degrees of freedom depends on the number of surrogate input variables set by the user in the model configuration. 
The model can have between 1 and 3 degrees of freedom, depending on the configuration. 
By default, the surrogate model includes the following input variables:

.. csv-table::
   :header: "Variable", "Variable Name", "Symbol", "Units", "Description"

   "System capacity", "``system_capacity``", ":math:`P_{th}`", ":math:`\text{MW}`", "Maximum thermal power output of the system"
   "Hours of storage", "``hours_storage``", ":math:`t_{storage}`", ":math:`\text{hr}`", "Number of hours of thermal storage"
   "Loop temperature", "``temperature_loop``", ":math:`T_{loop}`", ":math:`\text{°C}`", "Loop outlet temperature in Celsius"

System capacity is a :ref:`required input surrogate variable <surrogate_input_ref>`. The others are optional. Users can choose to use a fixed value for the hours of storage or loop temperature when generating data using PySAM.

The following parameters are required outputs of the surrogate model:

.. csv-table::
   :header:  "Variable", "Variable Name", "Symbol", "Units", "Description"

   "Heat annual","``heat_annual``", ":math:`H_{annual}`", ":math:`\text{kWh}`", "Annual thermal energy produced by the system"
   "Electricity annual", "``electricity_annual``", ":math:`E_{annual}`", ":math:`\text{kWh}`", "Annual electricity demand of the system"
   "Total aperture area", "``total_aperture_area``", ":math:`A_{total}`", ":math:`\text{m}^2`", "Total required area of the solar collectors"

Additional parameters included on the CST model block are:

.. csv-table::
   :header: "Parameter", "Parameter Name", "Symbol", "Valid Range", "Units"

   "Row Spacing", "``row_spacing``", ":math:`S_{row}`", "15", ":math:`\text{m}`"
   "Maximum solar collector assembly width", "``maximum_sca_width``", ":math:`W_{sca,max}`", "8.2", ":math:`\text{m}`"

These parameters are used to calculate the land area required for the CST system.

.. math::

    A_{land} = \frac{A_{aperture} \times S_{row}}{W_{sca,max}}


Generating Data
---------------

The data for the surrogate model can be generated using the `generate_trough_data` function in `run_pysam_trough.py` in the REFLO package.
This script uses the `TroughPhysicalIph <https://nrel-pysam.readthedocs.io/en/main/modules/TroughPhysicalIph.html>`_ model from PySAM to generate the data.
Running this script will use the default weather file and configuration file included in the REFLO package,
but users should update these files for their specific location and application.
Weather files can be downloaded from the `National Solar Radiation Database <https://nsrdb.nrel.gov/data-viewer>`_ 
and configuration ``.json`` files can be `created using SAM <https://nrel-pysam.readthedocs.io/en/v7.1.0/inputs-from-sam.html>`_.

The `generate_trough_data` function takes the following arguments:

.. csv-table::
   :header: "Name", "Keyword", "Units", "Description"

   "System capacity", "``system_capacities``", ":math:`\text{MW}`", "List of range of values of interest for the trough system capacity"
   "Hours of storage", "``hours_storage``", ":math:`\text{hr}`", "List of range of values of interest for the hours of thermal storage"
   "Loop temperature", "``temperature_loop``", ":math:`\text{°C}`", "List of range of values of interest for the loop outlet temperature"
   "Weather file", "``weather_file``", "N/A", "Path to the weather file"
   "Configuration file", "``config_file``", "N/A", "Path to the PySAM configuration file for the trough"
   "Dataset file name", "``dataset_filename``", "N/A", "Desired name of the output dataset file"

.. code-block:: python

    from watertap_contrib.reflo.solar_models import generate_trough_data

    data = generate_trough_data(
        system_capacities=[10, 20, 30, 40, 50],
        hours_storages=[6, 12, 24],
        temperatures_loop=[300],
        weather_file="path/to/weather/file.csv",
        config_file="path/to/config/file.json",
        dataset_filename="path/to/dataset/filename.pkl",
    )


Costing
--------

The costing approach is adopted from the SAM costing for parabolic trough systems.
The following parameters are constructed on the costing block for CST costing:

.. csv-table::
   :header: "Cost Component", "Variable", "Symbol", "Value", "Units", "Description"

   "Cost per total aperture area", "``cost_per_total_aperture_area``", ":math:`c_{ap}`", "373", ":math:`\text{USD/m}^2`", "Cost per m2 of total aperture area (includes site improvement 16 $/m2, solar field 297 $/m2, HTF system 60 $/m2)"
   "Cost per heat sink", "``cost_per_heat_sink``", ":math:`c_{hs}`", "120", ":math:`\text{USD/kW}`", "Cost for expenses related to installation of the heat sink, including labor and equipment per kWh (thermal) heat load"
   "Cost per balance of plant", "``cost_per_balance_of_plant``", ":math:`c_{bop}`", "90", ":math:`\text{USD/kW}`", "Cost per thermal kilowatt of heat sink capacity for expenses related to installation of the heat sink, including labor and equipment"
   "Cost per storage capital", "``cost_per_storage_capital``", ":math:`c_{s}`", "32", ":math:`\text{USD/kWh}`", "Cost per kWh of thermal energy storage capacity"
   "Contingency factor", "``contingency_frac_direct_cost``", ":math:`X_{c}`", "0.07", ":math:`\text{dimensionless}`", "Fraction of direct costs for contingency"
   "Indirect cost factor", "``indirect_frac_direct_cost``", ":math:`X_{i}`", "0.11", ":math:`\text{dimensionless}`", "Fraction of direct costs for indirect costs"
   "Taxable frac of direct costs", "``tax_frac_direct_cost``", ":math:`X_{d}`", "0.05", ":math:`\text{dimensionless}`", "Fraction of direct costs applicable for sales tax"
   "Sales tax as fraction of capital costs", "``sales_tax_frac``", ":math:`X_{t}`", "0", ":math:`\text{dimensionless}`", "Sales tax as fraction of capital costs"
   "Fixed operating cost per system capacity", "``fixed_operating_by_capacity``", ":math:`C_{fix,op}`", "103758", ":math:`\text{USD/year}`", "Fixed operating cost of trough plant in SAM. Not a function of electricity generated"
   "Variable operating cost per energy generated", "``variable_operating_by_generation``", ":math:`C_{var,op}`", "0.002", ":math:`\text{USD/kWh}`", "Variable operating cost of trough plant per kWh generated"

.. csv-table::
   :header: "Cost Component", "Symbol", "Equation"

   "Solar Aperture Cost", ":math:`C_{ap}`", ":math:`c_{ap} \times A_{total}`"
   "Thermal Storage Cost", ":math:`C_{s}`", ":math:`c_{s} \times t_{storage} \times P_{th}`"
   "Heat Sink Cost", ":math:`C_{hs}`", ":math:`c_{hs} \times P_{th}`"
   "Balance of Plant Cost", ":math:`C_{bop}`", ":math:`c_{bop} \times P_{th}`"
   "Land Cost", ":math:`C_{land}`", ":math:`c_{land} \times A_{land}`"
   "Fixed Operating Cost", ":math:`C_{fix,op}`", ":math:`C_{fix,op}`"
   "Variable Operating Cost", ":math:`C_{var,op}`", ":math:`C_{var,op} \times H_{annual}`"



The direct costs include the cost of the collecors, storage, heat sink, balance of plant, and contingency.

.. math::

    C_{direct} = (C_{ap} + C_{s} + C_{hs} + C_{bop}) * (1 + X_{c})


Indirect costs are calculated as a fraction of the direct costs and the land cost:

.. math::

    C_{indirect} = A_{land} c_{land} + C_{direct} X_{i}

Then, the total capital cost of the CST system is the sum of direct and indirect costs and sales tax:

.. math::

    C_{capital} = (C_{indirect} + C_{direct}) (1 + X_{t} * X_{d})

Note that by default, REFLO assumes no sales tax (i.e., :math:`X_{t} = 0`) or land cost (i.e., :math:`c_{land} = 0`).

The total operating cost is the sum of fixed and variable operating costs:

.. math::

   C_{operating} = C_{fix,op} + C_{var,op}

Energy Balance
--------------

The CST model has both thermal and electric power flows. The steady-state thermal output of the CST system is calculated as:

.. math::

    Q_{out} = H_{annual} / 8760

Where:

- :math:`Q_{out}` is the steady-state thermal output (in kW)
- :math:`H_{annual}` is the annual thermal energy generation (in kWh)

The parasitic power consumption of the CST system is calculated as:

.. math::

    P_{cons} = E_{annual} / 8760

Where:

- :math:`P_{cons}` is the parasitic power consumption (in kW)
- :math:`E_{annual}` is the annual electric energy consumption (in kWh)

Where:

References
----------

| Blair, N.; Dobos, A.; Freeman, J.; Neises, T.; Wagner, M.; Ferguson, T.; Gilman, P.; Janzou, S. (2014). 
| System Advisor Model™, SAM™ 2014.1.14: General Description. 
| NREL/TP-6A20-61019. National Renewable Energy Laboratory. Golden, CO. Accessed May 23, 2025. www.nrel.gov/docs/fy14osti/61019.pdf . 

| System Advisor Model™ Version 2025.4.16 (SAM™ 2025.4.16). 
| National Renewable Energy Laboratory. Golden, CO. Accessed May 23, 2025. https://sam.nrel.gov
